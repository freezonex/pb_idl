syntax = "proto3";
package freezonex.openiiot_api;

import "freezonex/common/api.proto";
import "freezonex/common/base_resp.proto";
import "freezonex/common/base_req.proto";

// 1. warehouse
message Warehouse {
  string id = 1;
  string name = 2;
  string warehouse_id = 3;
  string type = 4;
  string manager = 5;
  string department = 6;
  string email = 7;
  string project_group = 8;
  string note = 9;
  repeated StorageLocation storage_locations = 10;
  string create_time = 11;
  string update_time = 12;123
}

message AddWarehouseRequest {
  base_req.BaseRequest base_request = 1;
  string name = 2;
  string warehouse_id = 3;
  string type = 4;
  string manager = 5;
  string department = 6;
  string email = 7;
  string project_group = 8;
  string note = 9;
}

message AddWarehouseResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetWarehouseRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string name = 3;
  string warehouse_id = 4;
  string type = 5;
  string manager = 6;
  string department = 7;
  string email = 8;
  string project_group = 9;
  bool return_all_storelocations = 10;
}

message GetWarehouseResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated Warehouse data = 2;
}

message UpdateWarehouseRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string name = 3;
  string warehouse_id = 4;
  string type = 5;
  string manager = 6;
  string department = 7;
  string email = 8;
  string project_group = 9;
  string note = 10;
}
  
message UpdateWarehouseResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteWarehouseRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}
  
message DeleteWarehouseResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 2. storage location
message StorageLocationMaterial {
  string material_id = 1;
  string material_name = 2;
  int32 quantity = 3;
}

message StorageLocation {
  string id = 1;
  string warehouse_id = 2;
  string name = 3;
  bool occupied = 4;
  repeated StorageLocationMaterial materials = 5;
  string create_time = 6;
  string update_time = 7;
}

message AddStorageLocationRequest {
  base_req.BaseRequest base_request = 1;
  string warehouse_id = 2;
  string name = 3;
  bool occupied = 4;
}

message AddStorageLocationResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetStorageLocationRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string warehouse_id = 3;
  string name = 4;
  bool return_all_materials = 5;
}

message GetStorageLocationResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated StorageLocation data = 2;
}

message UpdateStorageLocationRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string warehouse_id = 3;
  string name = 4;
  bool occupied = 5;
}
  
message UpdateStorageLocationResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteStorageLocationRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}
  
message DeleteStorageLocationResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 3. Material
message Material {
  string id = 1;
  string product_code = 2;
  string name = 3;
  string product_type = 4;
  string unit = 5;
  string note = 6;
  repeated string storage_location_id = 7;
  repeated string storage_location = 8;
  string create_time = 9;
  string update_time = 10;
}

message AddMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string product_code = 2;
  string name = 3;
  string product_type = 4;
  string unit = 5;
  string note = 6;
}

message AddMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string product_code = 3;
  string name = 4;
  string product_type = 5;
  string unit = 6;
}

message GetMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated Material data = 2;
}

message UpdateMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string product_code = 3;
  string name = 4;
  string product_type = 5;
  string unit = 6;
  string note = 7;
}

message UpdateMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}

message DeleteMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 4. Tag RFID to Material
message RfidMaterial {
  string id = 1;
  string rfid = 2;
  string material_id = 3;
  int32 quantity = 4;
  string material_name = 5;
  string create_time = 6;
  string update_time = 7;
}

message AddRfidMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string rfid = 2;
  string material_id = 3;
  int32 quantity = 4;
}

message AddRfidMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetRfidMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string rfid = 2;
  string material_id = 3;
  int32 quantity = 4;
}

message GetRfidMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated RfidMaterial data = 2;
}

message UpdateRfidMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string rfid = 3;
  string material_id = 4;
  int32 quantity = 5;
}

message UpdateRfidMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteRfidMaterialRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}

message DeleteRfidMaterialResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 5. Define common structure for inbound, outbound and stocktaking
message Inventory {
  string rfid = 1;
  string material_id = 2;
  int32 quantity = 3;
  string material_name = 4;                      
  int32 stock_quantity = 5;
  int32 discrepancy = 6;
}

message ShelfInventory {
  string storage_location_id = 1;
  repeated Inventory inventory = 2;
  string storage_location = 3;
}

// 6. Inbound
message Inbound {
  string id = 1;
  string ref_id = 2;                            // Format: yyyymmdd0000
  string type = 3;                              // Inbound type
  string source = 4;                            // PDA or manual
  string note = 5;
  string operator = 6;
  string status = 7;                            //workflow: Done, Executing, To-do
  string create_time = 8;
  string update_time = 9;
}

message AddInboundRequest {
  base_req.BaseRequest base_request = 1;
  string type = 2;
  string source = 3;                            // PDA or manual
  repeated ShelfInventory shelf_records = 4;
  string note = 5;
  string status = 6;
}

message AddInboundResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetInboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
}

message GetInboundResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated Inbound data = 2;
}

message UpdateInboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
  string source = 5;
  string note = 6;
  string status = 7;
}

message UpdateInboundResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteInboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}

message DeleteInboundResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 7. Inbound Item Detail
message GetInboundRecordRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
}

message GetInboundRecordResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated ShelfInventory data = 2;
}

// 8. Outbound, all are same with Outbound
message Outbound {
  string id = 1;
  string ref_id = 2;                            // Format: yyyymmdd0000
  string type = 3;                              // Outbound type
  string source = 4;                            // PDA or manual
  string note = 5;
  string operator = 6;
  string status = 7;                            //workflow: Done, Executing, To-do
  string create_time = 8;
  string update_time = 9;
}

message AddOutboundRequest {
  base_req.BaseRequest base_request = 1;
  string type = 2;
  string source = 3;                            // PDA or manual
  repeated ShelfInventory shelf_records = 4;
  string note = 5;
  string status = 6;
}

message AddOutboundResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetOutboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
}

message GetOutboundResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated Outbound data = 2;
}

message UpdateOutboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
  string source = 5;
  string note = 6;
  string status = 7;
}

message UpdateOutboundResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteOutboundRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}

message DeleteOutboundResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 9. Outbound Item Detail
message GetOutboundRecordRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
}

message GetOutboundRecordResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated ShelfInventory data = 2;
}

// 10. Stocktaking, all are same with Inbound & Outbound
message Stocktaking {
  string id = 1;
  string ref_id = 2;                            // Format: yyyymmdd0000
  string type = 3;                              // Stocktaking type
  string source = 4;                            // PDA or manual
  string note = 5;
  string operator = 6;
  string status = 7;                            //workflow: Done, Executing, To-do
  string create_time = 8;
  string update_time = 9;
}

message AddStocktakingRequest {
  base_req.BaseRequest base_request = 1;
  string type = 2;
  string source = 3;                            // PDA or manual
  repeated ShelfInventory shelf_records = 6;    //source is PDA
}

message AddStocktakingResponse {
  base_resp.BaseResponse base_resp = 1;
  string id = 2;
}

message GetStocktakingRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
}

message GetStocktakingResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated Stocktaking data = 2;
}

message UpdateStocktakingRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
  string type = 4;
}

message UpdateStocktakingResponse {
  base_resp.BaseResponse base_resp = 1;
}

message DeleteStocktakingRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
}

message DeleteStocktakingResponse {
  base_resp.BaseResponse base_resp = 1;
}

// 11. Stocktaking Item Detail & result
message GetStocktakingRecordRequest {
  base_req.BaseRequest base_request = 1;
  string id = 2;
  string ref_id = 3;
}

message GetStocktakingRecordResponse {
  base_resp.BaseResponse base_resp = 1;
  repeated ShelfInventory data = 2;
}
